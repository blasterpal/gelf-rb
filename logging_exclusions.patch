diff --git a/lib/gelf/notifier.rb b/lib/gelf/notifier.rb
index 1630fed..6f4670d 100644
--- a/lib/gelf/notifier.rb
+++ b/lib/gelf/notifier.rb
@@ -12,7 +12,7 @@ module GELF
     # +host+ and +port+ are host/ip and port of graylog2-server.
     # +max_size+ is passed to max_chunk_size=.
     # +default_options+ is used in notify!
-    def initialize(host = 'localhost', port = 12201, max_size = 'WAN', options = {})
+    def initialize(host = 'localhost', port = 12201, max_size = 'WAN', default_options = {})
       @enabled = true
       @collect_file_and_line = true
 
@@ -20,18 +20,11 @@ module GELF
       self.max_chunk_size = max_size
       self.rescue_network_errors = false
 
-      self.default_options = options
+      self.default_options = default_options
       self.default_options['version'] = SPEC_VERSION
       self.default_options['host'] ||= Socket.gethostname
       self.default_options['level'] ||= GELF::UNKNOWN
       self.default_options['facility'] ||= 'gelf-rb'
-      
-      # create an array of default and possible provided logging library exclusions
-      # don't know if this will work on Windows 
-      exclusions  = ([File.join('lib', 'gelf')] + [options['logging_exclusions']]).compact
-      paths = exclusions.join('|').gsub(File::SEPARATOR,"\\#{File::SEPARATOR}")
-      @exclusions_regex = /.*(#{paths}).*/
-      # ie /.*(lib\/gelf|lib\/my_logger|buffered_logger).*/
 
       @sender = RubyUdpSender.new([[host, port]])
       self.level_mapping = :logger
@@ -185,12 +178,13 @@ module GELF
     end
 
     CALLER_REGEXP = /^(.*):(\d+).*/
+    LIB_GELF_PATTERN = File.join('lib', 'gelf')
+
     def set_file_and_line
       stack = caller
-      #require 'pry';binding.pry
       begin
         frame = stack.shift
-      end while frame.match(@exclusions_regex)
+      end while frame.include?(LIB_GELF_PATTERN)
       match = CALLER_REGEXP.match(frame)
       @hash['file'] = match[1]
       @hash['line'] = match[2].to_i
diff --git a/test/test_notifier.rb b/test/test_notifier.rb
index 9c9fb94..01b253d 100644
--- a/test/test_notifier.rb
+++ b/test/test_notifier.rb
@@ -23,7 +23,6 @@ class TestNotifier < Test::Unit::TestCase
     setup do
       Socket.stubs(:gethostname).returns('stubbed_hostname')
       @notifier = GELF::Notifier.new('host', 12345)
-      @notifier_with_exclusions = GELF::Notifier.new('host', 12345,'WAN',{'logging_exclusions' => ['test_notifier']})
       @sender = mock
       @notifier.instance_variable_set('@sender', @sender)
     end
@@ -113,11 +112,6 @@ class TestNotifier < Test::Unit::TestCase
         assert_equal line + 1, hash['line']
       end
 
-      should "set file and line with exclusions" do
-        hash = @notifier_with_exclusions.__send__(:extract_hash, { 'version' => '1.0', 'short_message' => 'message' })
-        assert_match /shoulda\/context.rb/, hash['file']
-      end
-
       should "set timestamp to current time if not set" do
         hash = @notifier.__send__(:extract_hash, { 'version' => '1.0', 'short_message' => 'message' })
         assert_instance_of Float, hash['timestamp']
